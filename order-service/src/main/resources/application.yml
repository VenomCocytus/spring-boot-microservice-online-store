spring:
  application:
    name: order-service

  datasource:
    url: jdbc:mysql://localhost:3306/order_service
    username: root
    password: mysql

  # To do all the migration using flyway
  jpa:
    hibernate:
      ddl-auto: none

  messages:
    basename: lang/messages,config.i18n.messages
    fallback-to-system-locale: false
    encoding: UTF-8
    cache-duration: 5

  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true

  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: order-placed
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: http://localhost:8085

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

service-data:
  info:
    title: Order Service API
    description: This service provides endpoints to order products.
    version: 0.0.1
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT
    contact:
      name: Allan Elong - Software Engineer - Content Creator
      url: https://github.com/VenomCocytus
  external-documentation:
    description: Find more info about our order service.
    url: https://github.com/VenomCocytus/spring-boot-microservice-online-store

server:
  port: 8081

inventory:
  url: "http://localhost:8082"

# Resilience4j Properties
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        minimum-number-of-calls: 5
  timelimiter:
    configs:
      default:
        timeout-duration:
          seconds: 3
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration:
          seconds: 2

# Kafka Properties
spring:
  kafka: